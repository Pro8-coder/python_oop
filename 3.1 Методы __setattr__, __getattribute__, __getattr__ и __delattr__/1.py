"""
Объявите класс Book для представления информации о книге. Объекты этого класса
должны создаваться командами:

book = Book()
book = Book(название, автор, число страниц, год издания)
В каждом объекте класса Book автоматически должны формироваться следующие
локальные свойства:

title - заголовок книги (строка, по умолчанию пустая строка);
author - автор книги (строка, по умолчанию пустая строка);
pages - число страниц (целое число, по умолчанию 0);
year - год издания (целое число, по умолчанию 0).

Объявите в классе Book магический метод __setattr__ для проверки типов
присваиваемых данных локальным свойствам title, author, pages и year. Если
типы не соответствуют локальному атрибуту (например, title должна ссылаться на
строку, а pages - на целое число), то генерировать исключение командой:

raise TypeError("Неверный тип присваиваемых данных.")
Создайте в программе объект book класса Book для книги:

автор: Сергей Балакирев
заголовок: Python ООП
pages: 123
year: 2022

P.S. На экран ничего выводить не нужно.
"""


class Book:
    """Класс для представления информации о книге."""

    def __init__(self, title: str = "", author: str = "",
                 pages: int = 0, year: int = 0) -> None:
        """
        Инициализация объекта Book.

        :param title: Заголовок книги (по умолчанию пустая строка).
        :param author: Автор книги (по умолчанию пустая строка).
        :param pages: Число страниц (по умолчанию 0).
        :param year: Год издания (по умолчанию 0).
        """
        self.title = title
        self.author = author
        self.pages = pages
        self.year = year

    def __setattr__(self, key: str, value: str | int) -> None:
        """
        Устанавливает значение атрибута с проверкой типа.

        :param key: Имя атрибута.
        :param value: Значение атрибута.
        :raises TypeError: Если тип значения не соответствует ожидаемому.
        """
        if key in ("title", "author"):
            if not isinstance(value, str):
                raise TypeError("Неверный тип присваиваемых данных.")
        elif key in ("pages", "year"):
            if not isinstance(value, int):
                raise TypeError("Неверный тип присваиваемых данных.")

        object.__setattr__(self, key, value)


book = Book("Python ООП", "Сергей Балакирев", 123, 2022)

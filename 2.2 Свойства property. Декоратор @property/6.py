"""
Вам требуется сформировать класс PathLines для описания маршрутов, состоящих
из линейных сегментов. При этом каждый линейный сегмент предполагается
задавать отдельным классом LineTo. Объекты этого класса будут формироваться
командой:

line = LineTo(x, y)
где x, y - следующая координата линейного участка
(начало маршрута из точки 0, 0).

В каждом объекте класса LineTo должны формироваться локальные атрибуты:

x, y - для хранения координат конца линии (начало определяется по координатам
предыдущего объекта).

Объекты класса PathLines должны создаваться командами:

p = PathLines()                   # начало маршрута из точки 0, 0
p = PathLines(line1, line2, ...)  # начало маршрута из точки 0, 0
где line1, line2, ... - объекты класса LineTo.

Сам же класс PathLines должен иметь следующие методы:

get_path() - возвращает список из объектов класса LineTo (если объектов нет,
то пустой список);
get_length() - возвращает суммарную длину пути (сумма длин всех линейных
сегментов);
add_line(self, line) - добавление нового линейного сегмента
(объекта класса LineTo) в конец маршрута.

Пояснение: суммарный маршрут - это сумма длин всех линейных сегментов, а длина
каждого линейного сегмента определяется как евклидовое расстояние по формуле:

L = sqrt((x1-x0)^2 + (y1-y0)^2)

где x0, y0 - предыдущая точка маршрута; x1, y1 - текущая точка маршрута.

Пример использования классов (эти строчки в программе писать не нужно):

p = PathLines(LineTo(10, 20), LineTo(10, 30))
p.add_line(LineTo(20, -10))
dist = p.get_length()
P.S. В программе требуется объявить только классы. На экран ничего выводить
не нужно.
"""


class LineTo:
    """Класс, представляет линейный сегмент маршрута."""

    def __init__(self, x: int, y: int) -> None:
        """
        Инициализация объекта LineTo.

        :param x: Координата x конца линии.
        :param y: Координата y конца линии.
        """
        self.x = x
        self.y = y


class PathLines:
    """Класс для описания маршрута, состоящего из линейных сегментов."""

    def __init__(self, *args: LineTo) -> None:
        """
        Инициализация объекта PathLines.

        :param args: Объекты класса LineTo, представляющие линейные сегменты.
        """
        self.lst = list(args)

    def get_path(self) -> list[LineTo]:
        """
        Возвращает список объектов класса LineTo.

        :return: Список линейных сегментов маршрута.
        """
        return self.lst

    def get_length(self) -> float:
        """
        Возвращает суммарную длину маршрута.

        :return: Суммарная длина всех линейных сегментов.
        """
        j = LineTo(0, 0)
        ln = 0.0

        for i in self.lst:
            ln += ((i.x - j.x) ** 2 + (i.y - j.y) ** 2) ** 0.5
            j = i

        return ln

    def add_line(self, line: LineTo) -> None:
        """
        Добавляет новый линейный сегмент в конец маршрута.

        :param line: Объект класса LineTo, представляющий новый сегмент.
        """
        self.lst.append(line)


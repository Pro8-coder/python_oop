"""
Объявите базовый класс с именем ItemAttrs, который бы позволял обращаться к
локальным атрибутам объектов дочерних классов по индексу. Для этого в классе
ItemAttrs нужно переопределить следующие методы:

__getitem__() - для получения значения атрибута по индексу;
__setitem__() - для изменения значения атрибута по индексу.

Объявите дочерний класс Point для представления координаты точки на плоскости.
Объекты этого класса должны создаваться командой:

pt = Point(x, y)
где x, y - целые или вещественные числа.

Пример использования классов (эти строчки в программе не писать):

pt = Point(1, 2.5)
x = pt[0]   # 1
y = pt[1]   # 2.5
pt[0] = 10
P.S. В программе нужно объявить только классы. На экран выводить ничего
не нужно.
"""
from typing import Any


class ItemAttrs:
    """
    Базовый класс, позволяющий обращаться к атрибутам по индексу.

    Реализует протокол последовательности через методы __getitem__ и
    __setitem__. Атрибуты хранятся в списке arr, к которому можно обращаться
    по индексу.

    :ivar arr: Список, содержащий значения всех атрибутов объекта
    """
    def __init__(self, *args: Any) -> None:
        self.arr = list(args)

    def __getitem__(self, index: int) -> Any:
        """
        Возвращает значение атрибута по индексу.

        :param index: Индекс элемента (0-based).
        :return: Значение атрибута под указанным индексом.
        """
        return self.arr[index]

    def __setitem__(self, index: int, value: Any) -> None:
        """
        Устанавливает значение атрибута по индексу.

        :param index: Индекс элемента (0-based).
        :param value: Новое значение атрибута.
        """
        self.arr[index] = value


class Point(ItemAttrs):
    """
    Класс для представления точки на двумерной плоскости.

    Наследует функциональность доступа по индексу от ItemAttrs.
    """

    def __init__(self, x: int | float, y: int | float) -> None:
        """
        Инициализирует точку с заданными координатами.

        :param x: Координата по оси абсцисс
        :param y: Координата по оси ординат
        """
        super().__init__(x, y)


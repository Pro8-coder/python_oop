"""
Объявите класс PolyLine (полилиния) для представления линии из
последовательности прямолинейных сегментов. Объекты этого класса должны
создаваться командой:

poly = PolyLine(start_coord, coord_2, coord_3, ..., coord_N)
Здесь start_coord - координата начала полилинии (кортеж из двух чисел x, y);
coord_2, coord_3, ... - последующие координаты точек на плоскости
(представленные кортежами), соединенных прямыми линиями.

Например:

poly = PolyLine((1, 2), (3, 5), (0, 10), (-1, 8))

В классе PolyLine должны быть объявлены следующие методы:

add_coord(x, y) - добавление новой координаты (в конец);
remove_coord(indx) - удаление координаты по индексу (порядковому номеру,
начинается с нуля);
get_coords() - получение списка координат (в виде списка из кортежей).

P.S. На экран ничего выводить не нужно, только объявить класс.
"""


class PolyLine:
    """
    Класс для представления полилинии (состоящей из прямолинейных сегментов).

    :ivar args: Список координат полилинии.
    :type args: list[tuple[int, int]]
    """

    def __init__(self, *args: tuple[int, int]) -> None:
        self.args = list(args)

    def get_coords(self) -> list[tuple[int, int]]:
        """
        Возвращает список координат полилинии.

        :return: Список координат (кортежи из двух чисел x, y).
        """
        return self.args.copy()

    def add_coord(self, x: int, y: int) -> None:
        """
        Добавляет новую координату в конец полилинии.

        :param x: Координата x.
        :param y: Координата y.
        """
        self.args.append((x, y))

    def remove_coord(self, indx: int) -> None:
        """
        Удаляет координату по указанному индексу.

        :param indx: Индекс координаты для удаления (начиная с 0).
        """
        if 0 <= indx < len(self.args):
            del self.args[indx]

